# Creates and deploys a Docker image of the build and notifies in Discord.

name: Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
          # Container registry username
          username: ${{ secrets.AZURE_USERNAME }}
          # Container registry password
          password: ${{ secrets.AZURE_PASSWORD }}
          # Container registry server url
          login-server: ${{ secrets.AZURE_LOGIN_SERVER }}
    - run: |
          # building creating a new image tags for version control
          docker build . -t ${{ secrets.AZURE_LOGIN_SERVER }}/idea-barrel-frontend:${{ github.sha }} -t ${{ secrets.AZURE_LOGIN_SERVER }}/idea-barrel-frontend:latest
          docker push ${{ secrets.AZURE_LOGIN_SERVER }}/idea-barrel-frontend:${{ github.sha }}
          docker push ${{ secrets.AZURE_LOGIN_SERVER }}/idea-barrel-frontend:latest
          
  discord:
    runs-on: ubuntu-latest
    needs: [release]
    if: github.ref == 'refs/heads/staging'
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: 'https://discordapp.com/api/webhooks/819631417847840799/fHDibLVKp_SSnjr7vHmbbqX-789HCPjqwikQr_p6p6B-5PdOaUB3z9FaexnTEnXcVQok'
      uses: Ilshidur/action-discord@master
      with:
       args: 'Production build has been updated, time to restart the App Service! @mikael'
